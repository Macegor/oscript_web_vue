
&HttpPost
&Действие("register")
Функция Регистрация() Экспорт

	ПолученныеДанные = ОбработчикЗапросов.ПолучитьТелоЗапроса(ЗапросHttp);
	ДанныеДляОтправки = Неопределено;
	КодСостояния = 200;

	Попытка
		Если ПолученныеДанные = Неопределено Тогда
			ВызватьИсключение "Данные авторизации не были получены";
		КонецЕсли;
		
		Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();	
		Пользователь.Имя = ПолученныеДанные.login;
		Пользователь.Пароль = ПолученныеДанные.password;
	
		Попытка
			Пользователь.Записать();
			ДанныеДляОтправки = Новый Структура("id", Строка(Пользователь.УникальныйИдентификатор));
		Исключение
			ВызватьИсключение "Пользователь уже существует";
		КонецПопытки;
	Исключение
		Возврат ОбработчикЗапросов.ПодготовитьОшибку(ИнформацияОбОшибке());
	КонецПопытки;	

	Возврат ОбработчикЗапросов.ПодготовитьОтвет(КодСостояния, ДанныеДляОтправки);

КонецФункции

&HttpPost
&Действие("login")
Функция Авторизация() Экспорт

	ПолученныеДанные = ОбработчикЗапросов.ПолучитьТелоЗапроса(ЗапросHttp);
	ДанныеДляОтправки = Неопределено;
	КодСостояния = 200;

	Попытка
		Если ПолученныеДанные = Неопределено Тогда
			ВызватьИсключение "Данные авторизации не были получены";
		КонецЕсли;
		
		Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();	
		Пользователь.Имя = ПолученныеДанные.login;
		Пользователь.Пароль = ПолученныеДанные.password;
	
		Пользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ПолученныеДанные.login);
		Если Пользователь = Неопределено Тогда
			ВызватьИсключение "Неверное имя пользователя или пароль";
		Иначе
			Если Не ПользователиИнформационнойБазы.АвторизоватьПоПаролю(Пользователь, ПолученныеДанные.password) Тогда
				ВызватьИсключение "Неверное имя пользователя или пароль";
			КонецЕсли;
		КонецЕсли;

		ДанныеДляОтправки = Новый Структура("id, name", Строка(Пользователь.УникальныйИдентификатор), Пользователь.Имя);
	Исключение
		Возврат ОбработчикЗапросов.ПодготовитьОшибку(ИнформацияОбОшибке());
	КонецПопытки;	

	Возврат ОбработчикЗапросов.ПодготовитьОтвет(КодСостояния, ДанныеДляОтправки);

КонецФункции

&HttpGet
&Действие("logout")
Функция СбросАвторизации() Экспорт

	ДанныеДляОтправки = Неопределено;
	КодСостояния = 200;

	Попытка
		ПользователиИнформационнойБазы.СброситьАутентификацию();	
		ДанныеДляОтправки = Новый Структура("result", "Выход выполнен");
	Исключение
		Возврат ОбработчикЗапросов.ПодготовитьОшибку(ИнформацияОбОшибке());
	КонецПопытки;	

	Возврат ОбработчикЗапросов.ПодготовитьОтвет(КодСостояния, ДанныеДляОтправки);

КонецФункции

&HttpGet
&Действие("test")
&Авторизовать
Функция Тест() Экспорт

	ДанныеДляОтправки = Неопределено;
	КодСостояния = 200;

	Попытка
		ПараметрыЗапроса = ОбработчикЗапросов.ПолучитьПараметрыЗапроса(ЗапросHttp);

		Если ПараметрыЗапроса.Количество() Тогда
			Текст = ПараметрыЗапроса.Получить("text");	
			Если НЕ ЗначениеЗаполнено(Текст) Тогда
				ВызватьИсключение "Не передан текст для возврата";
			КонецЕсли;
			ДанныеДляОтправки = Новый Структура("text", Текст);
		Иначе
			ВызватьИсключение "Нет параметров запроса";
		КонецЕсли;			
	Исключение
		Возврат ОбработчикЗапросов.ПодготовитьОшибку(ИнформацияОбОшибке());
	КонецПопытки;	

	Возврат ОбработчикЗапросов.ПодготовитьОтвет(КодСостояния, ДанныеДляОтправки);

КонецФункции